{"version":3,"sources":["js/task3.js"],"names":["console","log","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","delay","Promise","resolve","reject","setTimeout","id","time","logSuccess","logError","warn","amount","then","catch"],"mappings":";;;AAyDA,aAzDA,QAAA,qBAEAA,QAAQC,IAAI,4BAEZ,MAAMC,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAmBC,IACjBC,MAAAA,EAAQR,EAA0B,IAAK,KAGtC,OAAA,IAAIS,QAAQ,CAACC,EAASC,KAEvBC,WAAW,KACYT,KAAKE,SAAW,GAGjCK,EAAQ,CAAEG,GAAIN,EAAYM,GAAIC,KAAMN,IAEtCG,EAAOJ,EAAYM,KAEpBL,MAKLO,EAAa,EAAEF,GAAAA,EAAIC,KAAAA,MACvBhB,QAAQC,mBAAmBc,kBAAmBC,SAG1CE,EAAWH,IACff,QAAQmB,qCAAqCJ,+BAa/CP,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ,GAETV,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ,GAETV,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,KAC/BC,KAAKJ,GACLK,MAAMJ,GAETV,EAAgB,CAAEO,GAAI,GAAIK,OAAQ,MAC/BC,KAAKJ,GACLK,MAAMJ","file":"task3.94f5c9a9.js","sourceRoot":"..\\src","sourcesContent":["import '../sass/main.scss';\r\n\r\nconsole.log(\"Script for task3 connect\");\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst makeTransaction = (transaction) => {\r\n  const delay = randomIntegerFromInterval(200, 500);\r\n  \r\n    \r\n  return new Promise((resolve, reject) => {\r\n        \r\n        setTimeout(() => {\r\n            const canProcess = Math.random() > 0.3;\r\n\r\n            if (canProcess) {\r\n              resolve({ id: transaction.id, time: delay });\r\n            } else {\r\n            reject(transaction.id);\r\n            }\r\n        }, delay);\r\n    });\r\n  \r\n};\r\n\r\nconst logSuccess = ({id, time}) => {\r\n  console.log(`Transaction ${id} processed in ${time} ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\r\n};\r\n\r\n/*\r\n * Работает так\r\n */\r\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\r\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\r\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\r\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\r\n/*\r\n * Должно работать так\r\n */\r\nmakeTransaction({ id: 70, amount: 150 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n \r\nmakeTransaction({ id: 73, amount: 100 })\r\n  .then(logSuccess)\r\n  .catch(logError);"]}